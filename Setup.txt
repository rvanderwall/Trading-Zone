
#-------------------------  STEP 1  -------------------------------------------
# ---  Set up IP security in AZ

# On AZ Console -> Security Groups -> Inbound -> Create rule for ICMP





#-------------------------  STEP 2  -------------------------------------------
# ---  Set up app repositories for apt-get
#
# uncomment all of the Multiverse lines to the /etc/apt/sources.list file  (3 groups)
# Add these line to the end of the file  (some already there)

deb http://security.ubuntu.com/ubuntu precise-security main
deb-src http://security.ubuntu.com/ubuntu precise-security main
deb http://security.ubuntu.com/ubuntu precise-security universe
deb http://security.ubuntu.com/ubuntu precise-security multiverse
deb http://archive.ubuntu.com/ubuntu precise main multiverse
deb-src http://security.ubuntu.com/ubuntu precise-security universe
deb-src http://security.ubuntu.com/ubuntu precise-security multiverse
deb-src http://archive.ubuntu.com/ubuntu precise main multiverse
deb http://archive.ubuntu.com/ubuntu quantal main universe multiverse



#-------------------------  STEP 3  -------------------------------------------
# ---  Update the system

sudo apt-get update
sudo apt-get upgrade    # This takes a long time
sudo apt-get install python-setuptools
sudo apt-get install python-pip





=============    NOT NEEDED   ========================
sudo apt-get install ec2-api-tools

# generate a certificate here: 
#    https://portal.aws.amazon.com/gp/aws/securityCredentials#access_credentials

export EC2_PRIVATE_KEY=pk-XXXXX.pem
export EC2_CERT=cert-XXXXX.pem
ec2-authorize default -P icmp -t -1:-1 -s 0.0.0.0/0
===================================================





#-------------------------  STEP 4  -------------------------------------------
# ---  Install and config git

sudo apt-get -y install git
git config --global user.name "rvanderwall"
git config --global user.email "rvanderwall@yahoo.com"

# set default so that all changes are always pushed to the repository
# NOT NEEDED : git config --global push.default "matching"

# set default so that you avoid unnecessary commits
# NOT NEEDED : git config --global branch.autosetuprebase always

# set UI defaults
git config --global color.ui true
git config --global color.status auto
git config --global color.branch auto
git config --global core.editor vim

# Make sure all is configured by listing config params
git config --list

# connect to Master
git clone https://github.com/rvanderwall/Trading-Zone.git

# Update with one or more of these commands.
cd Trading-Zone
git reset
git checkout -- *
git pull
git pull https://github.com/rvanderwall/Trading-Zone.git





#-------------------------  STEP 5  -------------------------------------------
# --- Intall flup
cd
wget https://pypi.python.org/packages/2.6/f/flup/flup-1.0.2-py2.6.egg#md5=93ec6e3baeee3e5649a8456105178d4e
sudo easy_install flup-1.0.2-py2.6.egg




#-------------------------  STEP 6  -------------------------------------------
# --- Install apache
sudo apt-get -y install apache2

#Start apache
sudo /etc/init.d/apache2 start
sudo /etc/init.d/apache2 stop
sudo /etc/init.d/apache2 restart

##sudo apt-get install libapache2-mod-python
sudo apt-get -y install apache2-mpm-worker libapache2-mod-fastcgi

sudo cp /home/ubuntu/Trading-Zone/httpd.conf /etc/apache2/conf.d

# get mod_rewrite turned on
sudo a2enmod rewrite
sudo service apache2 restart


#-------------------------  STEP 7  -------------------------------------------
# Install django, image libraries for uploading and displaying images
sudo pip install django
sudo pip install nltk
sudo pip install numpy
sudo apt-get build-dep python-imaging

# Change Trading-Zone/TradingZoneSite/settings.py to be PRODUCTION=True
chmod 777 SiteData.db

#  Download NLTK corpus
> Python
>>  import nltk
>>  nltk.download()
>       large_grammars
>       punkt
>       maxent_treebank_pos_tagger

#-------------------------  STEP 8  -------------------------------------------
# --- Start the site
#./manage.py runfcgi method=threaded host=127.0.0.1 port=3033
runF






